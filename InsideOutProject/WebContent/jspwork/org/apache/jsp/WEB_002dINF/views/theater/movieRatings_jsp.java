/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-12-17 07:52:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.theater;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class movieRatings_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/theater.css\" />\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"rating-title\"><h2>관람등급 안내</h2></div>\r\n");
      out.write("<br />\r\n");
      out.write("<table id=\"movieRating\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>구분</th>\r\n");
      out.write("        <th>설명</th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("    <tr><td>\r\n");
      out.write("        <img src=\"");
      out.print(request.getContextPath());
      out.write("/images/all.png\" alt=\"\" id=\"img-ratings\" />\r\n");
      out.write("\t\t<p>전체관람가</p>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("            <td>모든 연령의 고객이 관람 가능</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr><td>\r\n");
      out.write("    \t<img src=\"");
      out.print(request.getContextPath());
      out.write("/images/12.png\" alt=\"\" id=\"img-ratings\" />\r\n");
      out.write("    \t<p>12세 관람가</p>\r\n");
      out.write("       \t</td>\r\n");
      out.write("        <td>만 12세 이상(주민등록상 생일기준) 관람 가능<br>\r\n");
      out.write("        \t만 12세 미만 고객은 보호자(성인) 동반 시 관람 가능</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr><td>\r\n");
      out.write("    \t<img src=\"");
      out.print(request.getContextPath());
      out.write("/images/15.png\" alt=\"\" id=\"img-ratings\" />\r\n");
      out.write("    \t<p>15세 관람가</p>\r\n");
      out.write("    \t</td>\r\n");
      out.write("        <td>만 15세 이상(주민등록상 생일기준) 관람 가능<br>\r\n");
      out.write("                     만 15세 이상 고객은 보호자(성인) 동반 시 관람 가능</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr><td>\r\n");
      out.write("        <img src=\"");
      out.print(request.getContextPath());
      out.write("/images/adult.png\" alt=\"\" id=\"img-ratings\"/>\r\n");
      out.write("        <p>청소년 관람 불가</p>\r\n");
      out.write("        </td>\r\n");
      out.write("        <td>만 18세 이상(주민등록상 생일기준) 관람 가능<br>\r\n");
      out.write("            - 만 18세 이상이더라도 고등학교 재학중인 경우 관람 불가<br>\r\n");
      out.write("            - 신분증은 지참 필수(구매, 입장 시 신분증 확인)<br>\r\n");
      out.write("                     만 18세 미만 고객은 보호자(성인) 동반 시에도 관람 불가</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
